<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>2024 on LLP2333&#39;s Blog</title>
    <link>https://llp2333.github.io/archives/2024/</link>
    <description>Recent content in 2024 on LLP2333&#39;s Blog</description>
    <image>
      <title>LLP2333&#39;s Blog</title>
      <url>https://llp2333.github.io/images/papermod-cover.png</url>
      <link>https://llp2333.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 11 Apr 2024 13:00:56 +0800</lastBuildDate><atom:link href="https://llp2333.github.io/archives/2024/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>记录一次系统迁移</title>
      <link>https://llp2333.github.io/posts/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E7%B3%BB%E7%BB%9F%E8%BF%81%E7%A7%BB/</link>
      <pubDate>Thu, 11 Apr 2024 13:00:56 +0800</pubDate>
      
      <guid>https://llp2333.github.io/posts/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E7%B3%BB%E7%BB%9F%E8%BF%81%E7%A7%BB/</guid>
      <description>记录一次系统迁移 开发板为rock 5a，使用的为Debian系统。最近买了一个香橙派5plus的64G的emmc(和rock5A通用并且比官方的更便宜)，打算将系统从内存卡迁移到emmc。
查看当前磁盘情况 fdisk -l 得到新磁盘名字为/dev/mmcblk0,原内存卡设备为/dev/mmcblk1
使用dd命令迁移 系统 sudo dd if=/dev/mmcblk1 of=/dev/mmcblk0 bs=4M status=progress dd：待执行的命令，即复制和转换命令。
if=/dev/mmcblk1：if 表示输入文件（input file）。/dev/mmcblk1 是源设备的文件路径，也就是数据的来源。
of=/dev/mmcblk0：of 表示输出文件（output file）。/dev/mmcblk0 是目标设备的文件路径，也就是数据要写入的地方。
bs=4M：bs 表示块大小（block size）。设置为每次读写 4M 数据。设定一个适当的块大小可以提高数据的复制速度。
status=progress：这是一个可选参数，它可以实时显示dd命令的进度信息。这对于一些需要花费长时间的复制任务来说非常有用，可以让用户知道复制过程的进度。
使用parted命令调整磁盘大小 如果不进行调整，系统可用大小还是默认的32G
先查看磁盘情况
parted /dev/mmcblk0 print #查看指定设备的磁盘大小 然后我对第3个分区进行了调整，使其扩容到emmc最大能支持的容量
parted /dev/mmcblk0 resizepart 3 100% </description>
    </item>
    
    <item>
      <title>前端路线</title>
      <link>https://llp2333.github.io/posts/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF/</link>
      <pubDate>Sat, 06 Apr 2024 20:29:58 +0800</pubDate>
      
      <guid>https://llp2333.github.io/posts/%E5%89%8D%E7%AB%AF%E8%B7%AF%E7%BA%BF/</guid>
      <description>前端路线 0 Roadmap 新手 进阶 1 HTML &amp;amp; CSS freecodecamp网站 里的 『响应式网页设计认证』 css学习：learnlayout网站 flex 布局： 学习：vgee.cn网站 练习：flexboxfroggy 2 JavaScript 《JavaScript权威指南》第六版 （2012年出版）PDF 《JavaScript 高级程序设计》（2019年出版） JavaScript 教程：网址 阮一峰的 ES6 教程 3 框架 React Vue 4 构建工具 《前端工程化》基于Vue3 教材：网址 Webpack Vite 5 大而全的教程 微软的前端教程：github网址 coderwhy 大前端系列教程 各种教程的网站：质量挺高（英语） frontendmasters网址 MDN 网址：大而全的文档 ChatGPT：升级到 plus 版本，打开使用网络内容的设置 6 具体步骤 基础知识（a、b可同步进行） HTML &amp;amp; CSS JavaScript 学习框架 React：更适合作为第一个框架学习 Vue：使得用起来更方便，但不利于新人了解具体实现原理 构建工具 在学习框架时也会用到构建工具 学完框架后再系统性学习 抄一个网站 在学完 HTML &amp;amp; CSS 时可以抄静态页面 学完 JavaScript、框架后可以抄整个站 </description>
    </item>
    
    <item>
      <title>基于s3协议的对象存储如何创建或者删除文件夹</title>
      <link>https://llp2333.github.io/posts/%E5%9F%BA%E4%BA%8Es3%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E6%88%96%E8%80%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9/</link>
      <pubDate>Sat, 06 Apr 2024 17:23:56 +0800</pubDate>
      
      <guid>https://llp2333.github.io/posts/%E5%9F%BA%E4%BA%8Es3%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E6%88%96%E8%80%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
      <description>基于s3协议的对象存储如何创建或者删除文件夹 ​ 首先我们必须明确的是，对象存储没有文件 夹的概念，所谓的文件夹只是文件的前缀
参考链接https://www.codemzy.com/blog/delete-s3-folder-nodejs</description>
    </item>
    
    <item>
      <title>Hugo使用技巧</title>
      <link>https://llp2333.github.io/posts/hugo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 01 Apr 2024 19:39:06 +0800</pubDate>
      
      <guid>https://llp2333.github.io/posts/hugo%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>Hugo使用技巧 如何让hugo和typora均能正常显示图片 创建文章时，设置路径为
hugo new posts/文章标题/index.md 注意：markdown文件必须以index命名
typora图片设置
你的文章的目录结构
hugo常用命令 hugo new posts/文章标题/index.md #新建文章 hugo #生成静态网页 hugo serve #生成静态网页并进行本地预览 </description>
    </item>
    
  </channel>
</rss>
